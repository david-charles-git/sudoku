@use 'library/mixins' as mixins;
@use 'library/variables' as variables;

#sudoku {
  @include mixins.grid;
  text-align: center;
  min-height: 100vh;

  &.ready {
    > .inner {
      .error-container,
      .completion-container,
      .loading-container,
      .sudoku-container {
        display: none;
      }

      .ready-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-primary;
        }
      }
    }

    &.menu {
      > .inner {
        .sudoku-controls-button {
          &.restart,
          &.solve,
          &.new,
          &.back {
            display: none;
          }
        }
      }
    }
  }

  &.playing {
    > .inner {
      .error-container,
      .completion-container,
      .loading-container,
      .ready-container {
        display: none;
      }

      .sudoku-container {
        display: -ms-grid;
        display: grid;
      }
    }
  }

  &.menu {
    > .inner {
      .error-container,
      .completion-container,
      .loading-container,
      .ready-container,
      .sudoku-container {
        display: none;
      }

      .menu-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-primary;
        }
      }
    }
  }

  &.error {
    > .inner {
      .loading-container,
      .completion-container,
      .ready-container {
        display: none;
      }

      .error-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-error;
        }
      }

      .sudoku-container {
        display: -ms-grid;
        display: grid;
      }
    }
  }

  &.complete {
    > .inner {
      .error-container,
      .loading-container,
      .ready-container {
        display: none;
      }

      .completion-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-success;
        }
      }

      .sudoku-container {
        display: -ms-grid;
        display: grid;

        .sudoku-controls-button {
          &.new {
            display: inline-block;
          }

          &.menu,
          &.validate {
            display: none;
          }
        }
      }
    }
  }

  &.loading {
    > .inner {
      .error-container,
      .completion-container,
      .sudoku-container,
      .ready-container {
        display: none;
      }

      .loading-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-primary;
        }
      }
    }
  }

  > .inner {
    @include mixins.inner;

    .error-container,
    .completion-container,
    .loading-container,
    .ready-container,
    .menu-container {
      @include mixins.container;
    }

    .sudoku-container {
      @include mixins.grid;
      position: relative;
      z-index: 2;
    }

    .sudoku-header {
      @include mixins.grid;
      grid-gap: variables.$small-grid-gap;
    }

    .sudoku-timer {
      @include mixins.grid;
      text-align: center;
    }

    .sudoku-grid {
      @include mixins.grid;
      grid-gap: 0;

      .sudoku-row {
        @include mixins.grid;
        grid-gap: 0px;
        -ms-grid-columns: auto 0 auto 0 auto 0 auto 0 auto 0 auto 0 auto 0 auto 0 auto;
        grid-template-columns: repeat(9, auto);
        text-align: center;

        &:last-child {
          .sudoku-item {
            border-bottom: variables.$big-border;
          }
        }

        &.row-3 {
          &:nth-child(3n + 1) {
            .sudoku-item {
              border-top: variables.$big-border;
            }
          }

          .sudoku-item {
            &:nth-child(3n + 1) {
              border-left: variables.$big-border;
            }
          }
        }

        &.row-2 {
          &:nth-child(2n + 1) {
            .sudoku-item {
              border-top: variables.$big-border;
            }
          }

          .sudoku-item {
            &:nth-child(2n + 1) {
              border-left: variables.$big-border;
            }
          }
        }

        .sudoku-item {
          @include mixins.item;

          &:first-child {
            border-left: variables.$big-border;
          }

          &:last-child {
            border-right: variables.$big-border;
          }

          .content {
            @include mixins.grid;
            @include mixins.background;
            z-index: 1;
            display: none;

            &.active {
              display: -ms-grid;
              display: grid;
              background-color: variables.$color-primary;

              &:hover {
                background-color: variables.$color-primary;
              }
            }
          }

          .options {
            @include mixins.grid;
            @include mixins.background;
            -ms-grid-columns: 1fr 0 1fr 0 1fr;
            grid-template-columns: repeat(3, 1fr);
            grid-gap: 0;
            -ms-flex-line-pack: stretch;
            align-content: stretch;
            -webkit-box-align: stretch;
            -ms-flex-align: stretch;
            align-items: stretch;
            -ms-grid-rows: auto 0 auto 0 auto;

            .option {
              font-size: 10px;
              height: 100%;
              text-align: center;
            }
          }
        }
      }
    }

    .sudoku-controls {
      @include mixins.grid;

      .sudoku-controls-button {
        &.new {
          display: none;
        }
      }
    }

    .sudoku-values {
      @include mixins.grid;
      grid-gap: 0px;
      -ms-grid-columns: auto 0px auto 0px auto 0px auto 0px auto 0px auto 0px auto 0px auto 0px auto;
      grid-template-columns: repeat(9, auto);
      text-align: center;

      .sudoku-values-item {
        @include mixins.item;
      }
    }

    .sudoku-controls-button {
      @include mixins.button;
    }

    .sudoku-title {
      font-size: 3em;
    }
  }
}
