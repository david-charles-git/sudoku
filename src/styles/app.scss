@use 'library/mixins' as mixins;
@use 'library/variables' as variables;

#sudoku {
  @include mixins.grid;
  text-align: center;
  min-height: 100vh;

  &.error {
    > .inner {
      .loading-container,
      .completion-container,
      .ready-container {
        display: none;
      }

      .error-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-error;
        }
      }

      .sudoku-container {
        display: -ms-grid;
        display: grid;
      }
    }
  }

  &.loading {
    > .inner {
      .error-container,
      .completion-container,
      .sudoku-container,
      .ready-container {
        display: none;
      }

      .loading-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-primary;
        }
      }
    }
  }

  &.ready {
    > .inner {
      .error-container,
      .completion-container,
      .loading-container,
      .sudoku-container {
        display: none;
      }

      .ready-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-primary;
        }
      }
    }
  }

  &.complete {
    > .inner {
      .error-container,
      .loading-container,
      .ready-container {
        display: none;
      }

      .completion-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-success;
        }
      }

      .sudoku-container {
        display: -ms-grid;
        display: grid;
      }

      .sudoku-controls-button {
        &.new {
          display: inline-block;
        }

        &.restart,
        &.menu,
        &.validate {
          display: none;
        }
      }
    }
  }

  &.playing {
    > .inner {
      .error-container,
      .completion-container,
      .loading-container,
      .ready-container {
        display: none;
      }

      .sudoku-container {
        display: -ms-grid;
        display: grid;
      }
    }
  }

  &.menu {
    > .inner {
      .error-container,
      .completion-container,
      .loading-container,
      .ready-container,
      .sudoku-container {
        display: none;
      }

      .menu-container {
        display: -ms-grid;
        display: grid;

        .background {
          opacity: 0.5;
          background-color: variables.$color-primary;
        }
      }
    }
  }

  > .inner {
    @include mixins.grid;
    grid-gap: variables.$big-grid-gap;
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    -ms-grid-rows: auto variables.$small-grid-gap auto;
    grid-template-rows: auto auto;
    width: clamp(300px, 80vw, 600px);
    margin: 0 auto;
    padding: clamp(variables.$small-grid-gap, 10vw, variables.$big-grid-gap);
    -webkit-filter: drop-shadow(0px 0px 10px variables.$color-secondary);
    filter: drop-shadow(0px 0px 10px variables.$color-secondary);
    background-color: variables.$color-primary;
    border-radius: 30px;
    max-width: 100vw;
    overflow: hidden;
    min-height: 600px;

    .error-container,
    .completion-container,
    .loading-container,
    .ready-container,
    .menu-container {
      @include mixins.grid;
      @include mixins.background;
      display: none;
      padding: clamp(20px, 10vw, 50px);

      .background {
        @include mixins.background;
        -webkit-transition: background-color 1s ease-in-out;
        -o-transition: background-color 1s ease-in-out;
        transition: background-color 1s ease-in-out;
        background-color: variables.$color-primary;
      }

      .content {
        @include mixins.grid;
        position: relative;
      }
    }

    .sudoku-container {
      @include mixins.grid;
      position: relative;
      z-index: 2;
    }

    .sudoku-header {
      @include mixins.grid;
      grid-gap: variables.$small-grid-gap;
    }

    .sudoku-timer {
      @include mixins.grid;
      text-align: center;
    }

    .sudoku-grid {
      @include mixins.grid;
      grid-gap: 0;

      .sudoku-row {
        @include mixins.grid;
        grid-gap: 0px;
        -ms-grid-columns: auto 0 auto 0 auto 0 auto 0 auto 0 auto 0 auto 0 auto 0 auto;
        grid-template-columns: repeat(9, auto);
        text-align: center;

        &:nth-child(3n + 1) {
          .sudoku-item {
            border-top: variables.$big-border;
          }
        }

        &:last-child {
          .sudoku-item {
            border-bottom: variables.$big-border;
          }
        }

        .sudoku-item {
          @include mixins.item;

          .content {
            @include mixins.grid;
            @include mixins.background;
            z-index: 1;
            display: none;

            &.active {
              display: -ms-grid;
              display: grid;
              background-color: variables.$color-primary;

              &:hover {
                background-color: variables.$color-primary;
              }
            }
          }

          .options {
            @include mixins.grid;
            @include mixins.background;
            -ms-grid-columns: 1fr 0 1fr 0 1fr;
            grid-template-columns: repeat(3, 1fr);
            grid-gap: 0;
            -ms-flex-line-pack: stretch;
            align-content: stretch;
            -webkit-box-align: stretch;
            -ms-flex-align: stretch;
            align-items: stretch;
            -ms-grid-rows: auto 0 auto 0 auto;
            grid-template-areas: '1 2 3' '4 5 6' '7 8 9';

            .option {
              font-size: 10px;
              height: 100%;
              text-align: center;

              &._1 {
                -ms-grid-row: 1;
                grid-area: 1;
              }

              &._2 {
                -ms-grid-row: 2;
                grid-area: 2;
              }

              &._3 {
                -ms-grid-row: 3;
                grid-area: 3;
              }

              &._4 {
                -ms-grid-row: 4;
                grid-area: 4;
              }

              &._5 {
                -ms-grid-row: 5;
                grid-area: 5;
              }

              &._6 {
                -ms-grid-row: 6;
                grid-area: 6;
              }

              &._7 {
                -ms-grid-row: 7;
                grid-area: 7;
              }

              &._8 {
                -ms-grid-row: 8;
                grid-area: 8;
              }

              &._9 {
                -ms-grid-row: 9;
                grid-area: 9;
              }
            }
          }

          &:nth-child(1) {
            border-left: variables.$big-border;
          }

          &:nth-child(3n + 1) {
            border-left: variables.$big-border;
          }

          &:last-child {
            border-right: variables.$big-border;
          }
        }
      }
    }

    .sudoku-controls {
      @include mixins.grid;
    }

    .sudoku-values {
      @include mixins.grid;
      grid-gap: 0px;
      -ms-grid-columns: auto 0px auto 0px auto 0px auto 0px auto 0px auto 0px auto 0px auto 0px auto;
      grid-template-columns: repeat(9, auto);
      text-align: center;

      .sudoku-values-item {
        @include mixins.item;
      }
    }

    .sudoku-controls-button {
      display: inline-block;
      cursor: pointer;
      background: none;
      border: none;
      border: variables.$small-border;
      outline: unset;
      padding: 0.5em 1em;

      &:hover {
        background-color: variables.$color-tertiary;
      }

      &.new {
        display: none;
      }
    }

    .sudoku-title {
      font-size: 3em;
    }
  }
  > .inner > *:nth-child(1) {
    -ms-grid-row: 1;
    -ms-grid-column: 1;
  }
  > .inner > *:nth-child(2) {
    -ms-grid-row: 3;
    -ms-grid-column: 1;
  }
}
